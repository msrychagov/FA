//
//  TransactionModel.swift
//  FA (Financial Accounting)
//
//  Created by –ú–∏—Ö–∞–∏–ª –†—ã—á–∞–≥–æ–≤ on 19.06.2025.
//

import Foundation

@MainActor
final class TransactionListModel: ObservableObject {
    // –ó–∞–≥—É–ª—à–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, —Ç–∞–∫ –∫–∞–∫ –∫—Ä–∞—à–∏—Ç—Å—è –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ - –Ω–∞–¥–æ —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è
    @Published
    var transactions: [Transaction] = [
        Transaction(id: 1,
                    account: BankAccount(id: "g5ldpb73", name: "–û—Å–Ω–æ–≤–Ω–æ–π —Å—á—ë—Ç", balance: 15000.50, currency: "RUB"),
                    category: Category(id: 2, name: "–ó–∞—Ä–ø–ª–∞—Ç–∞", emoji: "üí∞", isIncome: .income),
                    amount: 500.00,
                    transactionDate: formatter.date(from: "2025-06-13T23:42:34.083Z")!,
                    comment: "–ó–∞—Ä–ø–ª–∞—Ç–∞ –∑–∞ –º–µ—Å—è—Ü",
                    createdAt: formatter.date(from: "2025-06-13T23:42:34.083Z")!,
                    updatedAt: formatter.date(from: "2025-06-13T23:42:34.083Z")!),
        Transaction(id: 2,
                    account: BankAccount(id: "g5ldpb73", name: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç", balance: 1000.00, currency: "USD"),
                    category: Category(id: 1, name: "–û–¥–µ–∂–¥–∞", emoji: "üß¢", isIncome: .outcome),
                    amount: -30.00,
                    transactionDate: formatter.date(from: "2025-06-13T23:42:34.083Z")!,
                    comment: "–ü–æ–∫—É–ø–∫–∞ —Ñ—É—Ç–±–æ–ª–∫–∏",
                    createdAt: formatter.date(from: "2025-06-13T23:42:34.083Z")!,
                    updatedAt: formatter.date(from: "2025-06-13T23:42:34.083Z")!),
    ]
    
    var direction: Direction
    
    var sum: Decimal {
        var sum: Decimal = 0
        for transaction in transactions {
            sum += transaction.amount
        }
        return sum
    }
    
    init(direction: Direction) {
        self.direction = direction
        transactions = transactions.filter { $0.category.isIncome == direction }
    }
//    var service: TransactionsService = TransactionsService()
//
//    
//    init() {
//            // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å,
//            // –∞ –Ω–µ —á–µ—Ä–µ–∑ .task –≤—å—é—Ö–∏
//            Task { await loadTransactions() }
//        }
//    
//    func loadTransactions() async {
//        let transactionsFromService = await service.transactions()
//        self.transactions = transactionsFromService
//    }
    
}
